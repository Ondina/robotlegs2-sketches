<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 removedFromStage="onRemovedFromStage(event);"
		 name="popupsMasterView">
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;

			import yourdomain.common.controllers.events.SomePopUpEvent;
			import yourdomain.modules.popupStuff.controllers.events.SomeEvent;
			import yourdomain.modules.popupStuff.models.SomeVO;

			/**
			 *
			 * @author Ondina D. F.
			 */
			public var openedPopups:Array;
			protected var popupCounter:int;

			public function initView():void
			{
				popupCounter=1;
				openedPopups=[];
				openPoupButton.addEventListener(MouseEvent.CLICK, onOpenPopup);
				sendMessageButton.addEventListener(MouseEvent.CLICK, onDataPong);
			}

			//============================================================================
			// Open popup window
			//============================================================================
			protected function onOpenPopup(event:MouseEvent):void
			{
				var popupTitle:String="Some Popup " + popupCounter;
				openedPopups.push(popupTitle);
				popupCounter++;
				dispatchEvent(new SomePopUpEvent(SomePopUpEvent.OPEN_POPUP, this, popupTitle));
			}

			//============================================================================
			// Message received from popup
			//============================================================================
			public function onDataPing(someVO:SomeVO):void
			{
				receivedMessage.text="User name: " + someVO.user_name + "\r\nUser pw: I now it, but I won't tell you ;)";
			}

			//============================================================================
			// Send message to popup
			//============================================================================
			protected function onDataPong(event:MouseEvent):void
			{
				if (messageToSend.text == "")
					return;
				var someVO:SomeVO=new SomeVO();
				someVO.someMessage=messageToSend.text;
				dispatchEvent(new SomeEvent(SomeEvent.DATA_PONG, someVO));
			}

			//============================================================================
			// Clean up
			//============================================================================
			public function onPopupClosed(popupTitle:String):void
			{
				var popIndex:int=openedPopups.indexOf(popupTitle);
				openedPopups.splice(popIndex, 1);
				resetInputs();
			}

			protected function onClearMessage(event:MouseEvent):void
			{
				event.currentTarget.text="";
			}

			protected function onRemovedFromStage(event:Event):void
			{
				popupCounter=1;
				openedPopups=[];
				removeListeners();
				resetInputs();
			}

			public function resetInputs():void
			{
				receivedMessage.text="";
				messageToSend.text="";
			}

			protected function removeListeners():void
			{
				messageToSend.removeEventListener(MouseEvent.DOUBLE_CLICK, onClearMessage);
				openPoupButton.removeEventListener(MouseEvent.CLICK, onOpenPopup);
				sendMessageButton.removeEventListener(MouseEvent.CLICK, onDataPong);
			}
		]]>
	</fx:Script>
	<s:BorderContainer width="598"
					   height="435">
		<s:Button x="10"
				  y="51"
				  label="open popup"
				  id="openPoupButton"/>
		<s:Label x="178"
				 y="8"
				 text="work in progress"/>
		<s:TextArea id="receivedMessage"
					x="10"
					y="146"
					width="280"
					height="46"/>
		<s:Label x="10"
				 y="130"
				 text="Received from popup:"/>
		<s:Button x="10"
				  y="321"
				  label="send to popup"
				  id="sendMessageButton"/>
		<s:Label x="10"
				 y="254"
				 text="Send to popup"/>
		<s:TextArea id="messageToSend"
					x="10"
					y="269"
					width="280"
					height="44"/>
	</s:BorderContainer>
</s:Group>
